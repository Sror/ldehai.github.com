<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Andy Design]]></title>
  <link href="http://ldehai.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://ldehai.github.io/"/>
  <updated>2013-12-10T00:43:25+08:00</updated>
  <id>http://ldehai.github.io/</id>
  <author>
    <name><![CDATA[Andy.Liu]]></name>
    <email><![CDATA[ldehai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Base64嵌入图片]]></title>
    <link href="http://ldehai.github.io/blog/2013/11/12/embedded-image-with-base64/"/>
    <updated>2013-11-12T08:25:00+08:00</updated>
    <id>http://ldehai.github.io/blog/2013/11/12/embedded-image-with-base64</id>
    <content type="html"><![CDATA[<blockquote><p>一天冷似一天，阴冷的空气无声无息的悬在城市的上空，纷飞的落叶也在述说着岁月更替的故事。</p></blockquote>

<p>在使用wxPython写程序时，如果用到了图标，而打包的时候又想嵌到程序里，就要使用base64对图片进行编码，然后把生成的字符串直接写到程序里就好了,废话不多说，上代码: <!-- more --></p>

<pre><code># -*- coding:utf-8 -*-
#导入需要的库
import wx
from wx.lib.embeddedimage import PyEmbeddedImage #用于嵌入经过base64编码的图片

#用经过Base64处理的字符串构造图片，用图片生成的base64字符串替换下面括号里的内容即可
imgBase64 = PyEmbeddedImage("iVBORw0KGgoAAAANSUhEUgAAWCAYAAAAinad/.......+KElFTkSuQmCC")

#生成空位图
self.ESImage = imgBase64.GetImage()#.Scale(22,24)

#把上一步生成的图片加到控件上去
self.imageCtrl =    wx.StaticBitmap(self.RightPanel,wx.ID_ANY,wx.BitmapFromImage(self.ESImage))
</code></pre>

<p>那么怎么把一个图片用Base64编码呢，请看：</p>

<pre><code># -*- coding:utf-8 -*-
import base64

file = open('x1.png', 'rb')
pic = file.read()
b64 = base64.b64encode(pic)
print b64
</code></pre>

<p>在iOS中，如果我们发Html格式邮件的时候需要带上一个本地图片文件，应该怎么办呢，用附件不合适，这时候也要用Base64处理，注意html代码中base64的标记，这样浏览器才能正确的解码。</p>

<pre><code>MFMailComposeViewController *mailViewController = [[MFMailComposeViewController alloc] init];

//构造发送的邮件内容，注意base64的标记
NSString *strMessage = @"&lt;p&gt;How to find out the shoe you need in the piles of shoeboxes? Open each box?&lt;/p&gt;\
&lt;p&gt;Would you like to try the ShoeBox app?&lt;/p&gt;\
&lt;p&gt;&lt;img src='data:image/png;base64,%@'&gt;&lt;/p&gt;\
&lt;a href=https://itunes.apple.com/us/app/shoebox-find-your-shoes-quickly/    id640885172?ls=1&amp;mt=8&gt;View in App Store&lt;/a&gt;";

//把图片用base64编码，加到邮件的内容里
UIImage *appicon = [UIImage imageNamed:@"Icon.png"];
NSData *imageData = UIImagePNGRepresentation(appicon);
strMessage = [NSString stringWithFormat:strMessage,[imageData base64EncodedString]];

[mailViewController setMessageBody:strMessage isHTML:YES];
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[file already exists but should not pyconfig]]></title>
    <link href="http://ldehai.github.io/blog/2013/11/02/file-already-exists-but-should-not-pyconfig/"/>
    <updated>2013-11-02T21:53:00+08:00</updated>
    <id>http://ldehai.github.io/blog/2013/11/02/file-already-exists-but-should-not-pyconfig</id>
    <content type="html"><![CDATA[<p>接上一篇，用python项目用到了scipy计算模块，之后用pyinstaller打包后，每次运行就会报警告file already exists but should not:&hellip;&hellip;./pyconfig.h。虽然不影响运行，还是觉得有必要解决这个问题，在搜索到这个帖子后，问题解决<a href="http://stackoverflow.com/questions/19055089/pyinstaller-onefile-warning-pyconfig-h-when-importing-scipy-or-scipy-signal">http://stackoverflow.com/questions/19055089/pyinstaller-onefile-warning-pyconfig-h-when-importing-scipy-or-scipy-signal</a>.</p>

<p>问题的原因是pyinstaller打包时pyconfig.h多打了一次，所以会报已经存在了。这个解决方案就是把多余的pyconfig.h去掉。</p>

<p>下面开始详细说明如何修改：<!-- more -->
上一篇讲到使用如下命令打包exe：</p>

<pre><code>c:\&gt;c:/python27/python.exe c:/pyinstaller/pyinstaller.py --noconfirm --noconsole --onefile --icon=Icon.ico myapp.py
</code></pre>

<p>请仔细观察myapp.py所在目录，会自动生成myapp.spec文件，注意是每次都会重新生成，内容如下：</p>

<pre><code># -*- mode: python -*-
a = Analysis(['myapp.py'],
         pathex=['c:\\src'],
         hiddenimports=[],
         hookspath=None,
         runtime_hooks=None)
pyz = PYZ(a.pure)
exe = EXE(pyz,
      a.scripts,
      a.binaries,
      a.zipfiles,
      a.datas,
      name='myapp.exe',
      debug=False,
      strip=None,
      upx=True,
      console=False , icon='Icon.ico')
</code></pre>

<p>大概解释下文件的内容：</p>

<p>第一行a = Anaylysis(&hellip;)是用来分析程序用到的库，下面就是打包成exe的一些参数。所以我们在第一行代码之后加代码把多余的pyconfig.h去掉，新的spec文件如下：</p>

<pre><code># -*- mode: python -*-
a = Analysis(['myapp.py'],
         pathex=['c:\\src'],
         hiddenimports=[],
         hookspath=None,
         runtime_hooks=None)
#add_begin
for d in a.datas:
    if 'pyconfig' in d[0]:
        a.datas.remove(d)
        break
#add_end
pyz = PYZ(a.pure)
exe = EXE(pyz,
      a.scripts,
      a.binaries,
      a.zipfiles,
      a.datas,
      name='myapp.exe',
      debug=False,
      strip=None,
      upx=True,
      console=False , icon='Icon.ico')
</code></pre>

<p>为了使用修改后的spec文件来打包，需要使用新的命令：</p>

<pre><code>c:\&gt;c:/python27/python.exe c:/pyinstaller/pyinstaller.py myapp.spec
</code></pre>

<p>试试吧，warning没了吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python程序打包成EXE--使用pyinstaller打包matplotlib、scipy、wxpython]]></title>
    <link href="http://ldehai.github.io/blog/2013/09/22/pyinstaller-matplotlib-scipy/"/>
    <updated>2013-09-22T10:08:00+08:00</updated>
    <id>http://ldehai.github.io/blog/2013/09/22/pyinstaller-matplotlib-scipy</id>
    <content type="html"><![CDATA[<p>用python帮朋友写了个科学计算的程序，用到了matplotlib和scipy，以及wxpython。代码写完，发现不能直接拿给朋友用，windows系统默认是没有运行环境的，得装python,matplotlib,scipy以及其他的运行库。这对于程序小白来说实在强人所难。好在有pyinstaller，可以用它打包成一个exe文件，所有的库都在一起了。妈妈再也不用担心没有环境跑程序了。</p>

<!-- more -->


<p>到pyinstaller官网<a href="http://www.pyinstaller.org/">http://www.pyinstaller.org/</a>下载安装包.详细安装说明见官方文档<a href="http://pythonhosted.org/PyInstaller/#installing-in-windows">http://pythonhosted.org/PyInstaller/#installing-in-windows</a>。
这里简要说明一下步骤：
直接下载压缩包，现在的版本是2.1.解压后打开命令行，执行如下命令：</p>

<pre><code>c:\&gt;python setup.py install
</code></pre>

<p>可以用如下命令检查是不是已经装好了</p>

<pre><code>c:\&gt;pyintaller --version
</code></pre>

<p>ok，pyinstaller 装好了，开始打包</p>

<pre><code>c:\&gt;c:/python27/python.exe c:/pyinstaller/pyinstaller.py --noconfirm --noconsole --onefile --icon=Icon.ico myapp.py
</code></pre>

<p>解释一下几个参数：</p>

<p>noconfirm:在打包过程中不需要人工确认。</p>

<p>noconsole:打包后的程序运行时没有命令行窗口(在测试打包的过程中，可以把这个参数去掉，这样运行的时候可以从命令行查看出错信息，所有错误排除后再加上)。</p>

<p>onefile:顾名思义就是打包成一个文件，如果不加就是一个exe加一个文件夹，文件夹里存放需要的各种库文件。</p>

<p>icon:指定打包后的exe文件的图标（运行时窗口的图标是在程序里设定的）</p>

<p>由于pyinstaller2.1正式版还不支持scipy库，直接运行会报找不到scipy module。而developer版本已经支持了，所以去下载开发版重新安装。pyinstaller的代码在github上<a href="https://github.com/pyinstaller/pyinstaller">https://github.com/pyinstaller/pyinstaller</a>,选择develop分支下载。
pyinstaller对第三方库的支持情况见这里：<a href="http://www.pyinstaller.org/wiki/SupportedPackages">http://www.pyinstaller.org/wiki/SupportedPackages</a>。</p>

<p>安装步骤同上，不再赘述。安装完运行打包脚本会发现还有错误</p>

<pre><code>ImportError: No module named scipy.sparse.csgraph._validation
</code></pre>

<p>这是因为pyinstaller没能自动把_validation库加进来，我们就在代码里手动加上吧。</p>

<pre><code>from scipy.sparse.csgraph import _validation
</code></pre>

<p>再次运行，应该没问题了。</p>
]]></content>
  </entry>
  
</feed>
